package components;

import java.text.DateFormat;
import java.util.Collection;

import model.Message;
import robert.Vaadinjpa.domain.Person;

import com.vaadin.addon.jpacontainer.JPAContainer;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.event.ItemClickEvent;
import com.vaadin.event.ItemClickEvent.ItemClickListener;
import com.vaadin.ui.Table;

@SuppressWarnings({ "serial", "rawtypes", "unchecked" })
public class Tabela {

	private SenderData senderDane;
	private JPAContainer<Person> personContainer;
	
	private Table tableWithLogs;
	private DateFormat dateFormat;
	

	public Tabela(SenderData data, JPAContainer<Person> personContainer,
			DateFormat dateFormat) {
		this.senderDane = data;
		this.personContainer = personContainer;
		this.dateFormat = dateFormat;
		
	}
	

	public Tabela() {
		// TODO Auto-generated constructor stub
	}

	

	public SenderData getSenderDane() {
		return senderDane;
	}

	public void setSenderDane(SenderData data) {
		this.senderDane = data;
	}

	public JPAContainer<Person> getPersonContainer() {
		return personContainer;
	}

	public void setPersonContainer(JPAContainer<Person> personContainer) {
		this.personContainer = personContainer;
	}

	public Table getTable() {
		return tableWithLogs;
	}

	public void setTable(Table tableWithLogs) {
		this.tableWithLogs = tableWithLogs;
	}

	public DateFormat getDateFormat() {
		return dateFormat;
	}

	public void setDateFormat(DateFormat dateFormat) {
		this.dateFormat = dateFormat;
	}

	@AutoGenerated
	Table buildPanel() {

		getSenderDane().setTable(new Table());
		getSenderDane().getTable().setCaption("Logi");
		getSenderDane().getTable().setImmediate(true);
		getSenderDane().getTable().setWidth("460px");
		getSenderDane().getTable().setHeight("417px");
		getSenderDane().getTable().setSelectable(true);

		getSenderDane().getTable().addContainerProperty("log", String.class,
				null);
		getSenderDane().getTable().addContainerProperty("typ", String.class,
				null);
		getSenderDane().getTable().addContainerProperty("message",
				String.class, null);

		Collection<Message> list = getSenderDane().findAllMessages();

		for (Message e : list) {
			getSenderDane().getTable().addItem(
					new Object[] { e.getLog(), e.getType().getType(),
							e.getMessage() }, e.getId());
            
		}

		getSenderDane().getTable().addListener(new ValueChangeListener() {

			@Override
			public void valueChange(ValueChangeEvent event) {

			}
		});

		getSenderDane().getTable().addListener(new ItemClickListener() {
			public void itemClick(ItemClickEvent event) {

				getSenderDane().getTable().requestRepaint();
			}
		});

		getSenderDane().getTable().refreshRowCache();

		return getSenderDane().getTable();
	}
	
	
}
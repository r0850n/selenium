package components;

import java.util.Collection;

import javax.persistence.EntityManager;
import javax.persistence.Query;

import robert.Vaadinjpa.domain.Person;
import model.Message;
import model.Type;

import com.vaadin.addon.jpacontainer.JPAContainer;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.event.Action;
import com.vaadin.event.Action.Handler;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TwinColSelect;
import com.vaadin.ui.VerticalLayout;

@SuppressWarnings("serial")
public class SenderData<T> extends AbsoluteLayout implements
Property.ValueChangeListener, Handler, ClickListener {
	

	private JPAContainer<T> container;
	private EntityManager em;
	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Table tabela;
	@AutoGenerated
	private VerticalLayout verticalLayout;
	@AutoGenerated
	private Button button;
	@AutoGenerated
	private TextArea textArea;
	
	@AutoGenerated
	private TwinColSelect selectPerson;

	
	
	public JPAContainer<T> getContainer() {
		return container;
	}

	public void setContainer(JPAContainer<T> container) {
		this.container = container;
	}
	public TwinColSelect getSelectPerson() {
		return selectPerson;
	}

	public void setSelectPerson(TwinColSelect selectPerson) {
		this.selectPerson = selectPerson;
	}

	public SenderData(EntityManager em) {
		this.em = em;
	}

	public EntityManager getEm() {
		return em;
	}

	public void setEm(EntityManager em) {
		this.em = em;
	}

	public AbsoluteLayout getMainLayout() {
		return mainLayout;
	}

	public void setMainLayout(AbsoluteLayout mainLayout) {
		this.mainLayout = mainLayout;
	}

	public Table getTable() {
		return tabela;
	}

	public void setTable(Table tabela) {
		this.tabela = tabela;
	}

	public VerticalLayout getVerticalLayout() {
		return verticalLayout;
	}

	public void setVerticalLayout(VerticalLayout verticalLayout) {
		this.verticalLayout = verticalLayout;
	}

	public Button getButton() {
		return button;
	}

	public void setButton(Button button) {
		this.button = button;
	}

	public TextArea getTextArea() {
		return textArea;
	}

	public void setTextArea(TextArea textArea) {
		this.textArea = textArea;
	}

	

	public Type findTypeById(int id) {
		
		return getEm().find(Type.class, id);
		// TODO Auto-generated method stub
		
	}
	
	@SuppressWarnings("unchecked")
	public Collection<Type> findAllType() {
		Query query = getEm()
				.createQuery("SELECT t FROM Type t");
		return query.getResultList();
	}
	@SuppressWarnings("unchecked")
	public Collection<Message> findAllMessages() {
		Query query = getEm()
				.createQuery("SELECT m FROM Message m");
		return query.getResultList();
	}
	@SuppressWarnings("unchecked")
	public Collection<Person> findAllPeople() {
		Query query = getEm()
				.createQuery("SELECT p FROM Person p");
		return query.getResultList();
	}

	
		
		
		public Message findMessageById(int id) {
			
			return getEm().find(Message.class, id);
			// TODO Auto-generated method stub
			
		}
		
		public void removeMessage(int id) {
			Message msg = findMessageById(id);
			if (msg != null) {
				getEm().remove(msg);
			}
		}

	@Override
	public void buttonClick(ClickEvent event) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public Action[] getActions(Object target, Object sender) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void handleAction(Action action, Object sender, Object target) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void valueChange(ValueChangeEvent event) {
		// TODO Auto-generated method stub
		
	}

	public Person findPeopleById(Long id) {
		// TODO Auto-generated method stub
		return  getEm().find(Person.class, id);
	}
	
}